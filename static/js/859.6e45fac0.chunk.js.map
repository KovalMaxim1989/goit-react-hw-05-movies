{"version":3,"file":"static/js/859.6e45fac0.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/Home/Home.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin-top: 20px;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 3%;\n`;\n\nexport const Item = styled.li`\n  padding: 5px;\n  border-radius: 10px;\n  display: flex;\n  justify-content: center;\n  width: 75%;\n  &:not(:last-child) {\n    @media screen and (max-width: 767px) {\n      margin: 0 auto;\n      margin-bottom: 20px;\n    }\n  }\n  @media screen and (min-width: 768px) {\n    width: 45%;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 30%;\n  }\n  transition: color 250ms ease-in-out, background-color 250ms ease-in-out,\n    box-shadow 250ms ease-in-out, transform 250ms ease-in-out;\n  &:hover,\n  &:focus {\n    cursor: pointer;\n    box-shadow: 2px 2px 6px 2px rgba(254, 60, 1, 0.9);\n    transform: scale(1.03);\n  }\n`;\n\nexport const ImgWrapper = styled.div`\n  border-radius: 10px;\n  overflow: hidden;\n  position: relative;\n  > img {\n    object-fit: cover;\n  }\n`;\n\nexport const InfoWrapper = styled.div`\n  padding-top: 10px;\n  overflow: hidden;\n`;\n","import { NavLink, useLocation } from 'react-router-dom';\nimport { List, Item, ImgWrapper, InfoWrapper } from './MoviesList.styled';\nimport PropTypes from 'prop-types';\nimport defaultImg from '../../images/movie-pic.jpg';\n\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nfunction MoviesList({ movies }) {\n  const location = useLocation();\n\n  return (\n    <List>\n      {movies.map(\n        ({\n          id,\n          poster_path,\n          original_title,\n          name,\n          vote_average,\n          vote_count,\n        }) => (\n          <Item key={id}>\n            <NavLink to={`/movies/${id}`} state={{ from: location }}>\n              <ImgWrapper>\n                <img\n                  src={poster_path ? BASE_IMG_URL + poster_path : defaultImg}\n                  alt={name}\n                />\n              </ImgWrapper>\n              <InfoWrapper>\n                <h2>{original_title ?? name}</h2>\n                <p>Rating: {vote_average}</p>\n                <p>Votes: {vote_count} </p>\n              </InfoWrapper>\n            </NavLink>\n          </Item>\n        )\n      )}\n    </List>\n  );\n}\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      poster_path: PropTypes.string,\n      name: PropTypes.string,\n      original_title: PropTypes.string,\n      vote_average: PropTypes.number,\n      vote_count: PropTypes.number,\n    })\n  ).isRequired,\n};\n\nexport default MoviesList;\n","import { getTrendingMovies } from 'services/api';\nimport { useEffect, useState } from 'react';\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nexport default function Home() {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    getTrendingMovies().then(setMovies);\n  }, []);\n\n  return (\n    <div>\n      <h1>Home</h1>\n      <MoviesList movies={movies} />\n    </div>\n  );\n}\n","import axios from 'axios';\nimport toast from 'react-hot-toast';\n\n// #API_KEY = 'd03712107dcdd723f1173c5ee2c0d8c1';\n\nconst agent = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: { api_key: 'd03712107dcdd723f1173c5ee2c0d8c1' },\n});\n\nexport async function getMoviesByQuery(query, controller) {\n  try {\n    const movies = await agent.get('search/movie', {\n      params: {\n        query,\n        signal: controller.signal,\n      },\n    });\n\n    return movies?.data?.results;\n  } catch (error) {\n    toast.error('Something went wrong ðŸ˜¥!');\n    console.error(error);\n  }\n}\n\nexport async function getTrendingMovies() {\n  try {\n    const movies = await agent.get('trending/movie/day', {\n      params: {\n        language: 'en-US',\n      },\n    });\n\n    return movies?.data?.results;\n  } catch (error) {\n    toast.error('Something went wrong ðŸ˜¥!');\n    console.error(error);\n  }\n}\n\nexport async function getMoviesDetailsById(id, controller) {\n  try {\n    const movie = await agent.get(`movie/${id}`, {\n      params: {\n        signal: controller.signal,\n      },\n    });\n\n    return movie?.data;\n  } catch (error) {\n    toast.error('Something went wrong ðŸ˜¥!');\n    console.error(error);\n  }\n}\n\nexport async function getMovieCast(id, controller) {\n  try {\n    const actors = await agent.get(`movie/${id}/credits`, {\n      params: {\n        signal: controller.signal,\n      },\n    });\n\n    return actors?.data?.cast;\n  } catch (error) {\n    toast.error('Something went wrong ðŸ˜¥!');\n    console.error(error);\n  }\n}\n\nexport async function getMovieReviews(id, controller) {\n  try {\n    const reviews = await agent.get(`movie/${id}/reviews`, {\n      params: {\n        signal: controller.signal,\n      },\n    });\n\n    return reviews?.data?.results;\n  } catch (error) {\n    toast.error('Something went wrong ðŸ˜¥!');\n    console.error(error);\n  }\n}"],"names":["List","styled","Item","ImgWrapper","InfoWrapper","movies","location","useLocation","map","id","poster_path","original_title","name","vote_average","vote_count","to","state","from","src","defaultImg","alt","Home","useState","setMovies","useEffect","getTrendingMovies","then","MoviesList","agent","axios","baseURL","params","api_key","getMoviesByQuery","query","controller","get","signal","data","results","toast","console","error","language","getMoviesDetailsById","movie","getMovieCast","actors","cast","getMovieReviews","reviews"],"sourceRoot":""}